<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:component-scan base-package="com.pentalog.sc" />

	<mvc:annotation-driven />

	<context:annotation-config />

	<jpa:repositories base-package="com.pentalog.sc.dao" />


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="/WEB-INF/persistence.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="suppliercenter" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.SQLServerPlatform" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<props>
				<prop key="eclipselink.weaving">false</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="SupplierCenter" />
		<property name="password" value="SupplierCenter" />
	</bean>


	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="false" />

	<!-- sync beans -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>resources/job/jobTimeConfig.properties</value>
		</property>
	</bean>

	<bean id="job" class="com.pentalog.sc.job.SchedulerJobHandler" />

	<bean id="syncSuppliersBean"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="job" />
		<property name="targetMethod" value="syncSuppliers" />
	</bean>
	<bean id="syncSuppliersTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="syncSuppliersBean" />
		<property name="cronExpression" value="${suppliercenter.sync.suppliers}" />
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="syncSuppliersBean" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="syncSuppliersTrigger" />
			</list>
		</property>
	</bean>
	<!-- Security login -->


	<security:http pattern="/ws/resources/**"
		entry-point-ref="restAuthenticationEntryPoint" use-expressions="true"
		auto-config="false" create-session="stateless">
		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/ws/resources/**"
			access="isAuthenticated()" />
		<security:logout />
	</security:http>

	<bean class="com.pentalog.sc.filter.TokenAuthenticationFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg type="java.lang.String">
			<value>/ws/resources/**</value>
		</constructor-arg>
	</bean>

	<security:http auto-config="true">

		<!-- Restrict URLs based on role -->

		<security:intercept-url pattern="/products"
			access="ROLE_OPERATOR, ROLE_ADMIN" />
		<security:intercept-url pattern="/suppliers"
			access="ROLE_OPERATOR, ROLE_ADMIN" />
		<security:intercept-url pattern="/stocks"
			access="ROLE_OPERATOR, ROLE_ADMIN" />

		<security:form-login authentication-failure-url="/error"
			always-use-default-target="true" default-target-url="/products" />

		<security:logout logout-success-url="/products"
			delete-cookies="jsessionid" invalidate-session="true" />
	</security:http>

	<bean id="encoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

	<security:authentication-manager>
		<security:authentication-provider
			ref="customAuthenticationProvider" />
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource" />
			<security:password-encoder ref="encoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<security:global-method-security
		jsr250-annotations="enabled" pre-post-annotations="enabled"
		secured-annotations="enabled" />



</beans>